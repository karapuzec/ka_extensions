<?php
/*
	$Project$
	$Author$

	$Version$ ($Revision$)
*/

namespace extension\ka_extensions\ka_extensions;

use \extension\ka_extensions\KamodManager;

class ModelSettingExtension extends \ModelSettingExtension {	

	public function install($type, $code) {
	
		parent::install($type, $code);

		if ($this->activateKamodForExtension($type, $code)) {
			KamodManager::getInstance()->markKamodCacheInvalid();
		}
	}

	public function uninstall($type, $code) {
	
		parent::uninstall($type, $code);
	
 		if ($this->deactivateKamodForExtension($type, $code)) {
			KamodManager::getInstance()->markKamodCacheInvalid();
		}
	}
	
	
	public function activateKamodForExtension($type, $code) {
	
		$extension_dir = DIR_APPLICATION . 'controller/extension/' . $type . '/' . $code;
	
		if (!is_dir($extension_dir)) {
			return false;
		}
	
		// we activate kamod only for modules with the manifest included
		//
		if (!file_exists($extension_dir . '/' . KamodManager::MANIFEST_INI_FILE)) {
			return false;
		}
		
		$contents = <<<CNTTXT
This file was generated by kamod automatically.
If you delete the file, kamod modifications of this extension may stop working on next cache rebuild.

More information on kamod can be found here: https://www.ka-station.com/kamod
	
CNTTXT;
	
		$file = $extension_dir . '/' . KamodManager::ACTIVE_KAMOD_FILE;
		file_put_contents($file, $contents);
		
		KamodManager::getInstance()->markKamodCacheInvalid();
		
		return true;
	}
	
	
	public function deactivateKamodForExtension($type, $code) {
	
		$extension_dir = DIR_APPLICATION . 'controller/extension/' . $type . '/' . $code;
	
		$file = $extension_dir . '/' . KamodManager::ACTIVE_KAMOD_FILE;

		if (file_exists($file)) {
			KamodManager::getInstance()->markKamodCacheInvalid();
		
			unlink($file);
			return true;
		}
		
		return false;
	}
}